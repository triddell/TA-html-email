trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps: 
- task: GoTool@0
  displayName: 'Go Install'
  inputs:
    version: 1.17.2

- script: |
    GOOS=darwin GOARCH=amd64 go build -o darwin_x86_64/bin/html-email
    GOOS=linux GOARCH=amd64 go build -o linux_x86_64/bin/html-email
    GOOS=windows GOARCH=amd64 go build -o windows_x86_64/bin/html-email.exe
  displayName: 'Go Build'

- task: UseGitVersion@5
  displayName: Determine Version Number
  inputs:
    versionSpec: '5.x'

- task: Bash@3
  displayName: 'Set Version Number in app.conf'
  inputs:
    targetType: 'inline'
    script: sed -i 's/$VERSION/$GITVERSIONNUMBER/g' default/app.conf
  env:
    GITVERSIONNUMBER: $(GitVersion.SemVer)

- script: tar --exclude='azure-pipelines.yml' --exclude='.git' --exclude='.gitignore' --exclude='GitVersion.yml' --exclude='Makefile' --exclude='*.go' --exclude='go.*' --transform 's|^|/TA-html-email/|' -czf $(Build.ArtifactStagingDirectory)/TA-html-email_$(GitVersion.NuGetVersion).tgz .
  displayName: 'Package App'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Build Artifact'
  inputs:
    pathtoPublish: $(Build.ArtifactStagingDirectory)/TA-html-email_$(GitVersion.NuGetVersion).tgz
    artifactName: 'TA-html-email'

- task: GithubRelease@0 
  displayName: 'Create GitHub Release'      
  inputs:
    gitHubConnection: triddell-Releases
    repositoryName: triddell/TA-html-email
    tagSource: manual
    tag: $(GitVersion.NuGetVersion)
    assets: $(Build.ArtifactStagingDirectory)/*.tgz
  condition: and(succeeded(), eq('true', variables['CUT_RELEASE']))
